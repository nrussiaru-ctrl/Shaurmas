import os
import json
import re
import random
import itertools
import discord
from discord.ext import commands, tasks
import wikipedia
from googletrans import Translator
from dotenv import load_dotenv
import wavelink

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ===
load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')
LAVALINK_HOST = os.getenv('LAVALINK_HOST', '127.0.0.1')
LAVALINK_PORT = int(os.getenv('LAVALINK_PORT', 2333))
LAVALINK_PASSWORD = os.getenv('LAVALINK_PASSWORD', 'youshallnotpass')

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents, help_command=None)

# === –•—Ä–∞–Ω–∏–ª–∏—â–∞ ===
CUSTOM_COMMANDS_FILE = "custom_commands.json"
LEVELS_FILE = "levels.json"

def load_json(file, default):
    if os.path.exists(file):
        with open(file, 'r', encoding='utf-8') as f:
            return json.load(f)
    return default

def save_json(file, data):
    with open(file, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

custom_commands = load_json(CUSTOM_COMMANDS_FILE, {})
user_levels = load_json(LEVELS_FILE, {})

# === –£—Ç–∏–ª–∏—Ç—ã —É—Ä–æ–≤–Ω–µ–π ===
def get_level_xp(level):
    return 5 * (level ** 2) + 50 * level + 100

def add_xp(user_id, xp):
    user_id = str(user_id)
    if user_id not in user_levels:
        user_levels[user_id] = {"xp": 0, "level": 1}
    user_levels[user_id]["xp"] += xp
    current = user_levels[user_id]
    while current["xp"] >= get_level_xp(current["level"]):
        current["level"] += 1
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å, —É–∫–∞–∑–∞–≤ ID –∫–∞–Ω–∞–ª–∞
        # channel = bot.get_channel(123456789)
        # if channel:
        #     bot.loop.create_task(channel.send(f"üéâ <@{user_id}> –¥–æ—Å—Ç–∏–≥ {current['level']} —É—Ä–æ–≤–Ω—è!"))
    save_json(LEVELS_FILE, user_levels)

# === –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–∞ ===
STATUS_CYCLE = [
    (discord.ActivityType.playing,    "–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üõ†Ô∏è"),
    (discord.ActivityType.watching,   "{guilds} —Å–µ—Ä–≤–µ—Ä–æ–≤"),
    (discord.ActivityType.watching,   "{members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"),
    (discord.ActivityType.listening,  "!help | !play"),
    (discord.ActivityType.competing,  "–∑–∞ —Ç–≤–æ—ë –≤–Ω–∏–º–∞–Ω–∏–µ! üíñ"),
]

@bot.event
async def on_ready():
    print(f'‚úÖ {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    print(f'üìä –°–µ—Ä–≤–µ—Ä–æ–≤: {len(bot.guilds)}')
    total_members = sum(guild.member_count for guild in bot.guilds)
    print(f'üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {total_members}')
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Lavalink
    try:
        node = wavelink.Node(
            uri=f"http://{LAVALINK_HOST}:{LAVALINK_PORT}",
            password=LAVALINK_PASSWORD
        )
        await wavelink.Pool.connect(client=bot, nodes=[node])
        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Lavalink: {LAVALINK_HOST}:{LAVALINK_PORT}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Lavalink: {e}")
    
    # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    if not update_status.is_running():
        update_status.start()

@tasks.loop(seconds=30)
async def update_status():
    activity_type, text = next(update_status._status_iter)
    formatted_text = text.format(
        guilds=len(bot.guilds),
        members=sum(guild.member_count for guild in bot.guilds)
    )
    await bot.change_presence(
        activity=discord.Activity(type=activity_type, name=formatted_text)
    )

@update_status.before_loop
async def before_update_status():
    update_status._status_iter = itertools.cycle(STATUS_CYCLE)

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ===
@bot.event
async def on_member_join(member):
    welcome_channel = discord.utils.get(member.guild.text_channels, name="welcome")
    if not welcome_channel:
        welcome_channel = member.guild.system_channel or next(iter(member.guild.text_channels), None)
    
    if welcome_channel:
        embed = discord.Embed(
            title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
            description=f"–ü—Ä–∏–≤–µ—Ç, {member.mention}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –Ω–∞ {member.guild.name}!",
            color=0x00ff00
        )
        embed.set_thumbnail(url=member.display_avatar.url)
        await welcome_channel.send(embed=embed)
    
    # –ê–≤—Ç–æ-—Ä–æ–ª—å (–∑–∞–º–µ–Ω–∏—Ç–µ "Member" –Ω–∞ –∏–º—è –≤–∞—à–µ–π —Ä–æ–ª–∏)
    role = discord.utils.get(member.guild.roles, name="Member")
    if role:
        await member.add_roles(role)

# === –ú–æ–¥–µ—Ä–∞—Ü–∏—è ===
@bot.command(name='ban')
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason="–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    await member.ban(reason=reason)
    await ctx.send(f"üö´ {member} –∑–∞–±–∞–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: {reason}")

@bot.command(name='kick')
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member, *, reason="–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
    await member.kick(reason=reason)
    await ctx.send(f"üë¢ {member} –∫–∏–∫–Ω—É—Ç. –ü—Ä–∏—á–∏–Ω–∞: {reason}")

@bot.command(name='clear')
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int):
    if amount > 100:
        await ctx.send("–ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –º–∞–∫—Å–∏–º—É–º 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑.")
        return
    deleted = await ctx.channel.purge(limit=amount + 1)
    await ctx.send(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} —Å–æ–æ–±—â–µ–Ω–∏–π.", delete_after=5)

# === –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ===
@bot.command(name='addcmd')
@commands.has_permissions(administrator=True)
async def addcmd(ctx, name, *, response):
    custom_commands[name.lower()] = response
    save_json(CUSTOM_COMMANDS_FILE, custom_commands)
    await ctx.send(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ `!{name}` –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

@bot.command(name='delcmd')
@commands.has_permissions(administrator=True)
async def delcmd(ctx, name):
    if name.lower() in custom_commands:
        del custom_commands[name.lower()]
        save_json(CUSTOM_COMMANDS_FILE, custom_commands)
        await ctx.send(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ `!{name}` —É–¥–∞–ª–µ–Ω–∞!")
    else:
        await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if message.content.startswith('!'):
        cmd = message.content[1:].split()[0].lower()
        if cmd in custom_commands:
            await message.channel.send(custom_commands[cmd])
            return

    # –°–∏—Å—Ç–µ–º–∞ XP (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã)
    if not message.content.startswith('!'):
        add_xp(message.author.id, random.randint(10, 25))

    await bot.process_commands(message)

# === –£—Ä–æ–≤–Ω–∏ ===
@bot.command(name='rank')
async def rank(ctx, member: discord.Member = None):
    member = member or ctx.author
    data = user_levels.get(str(member.id), {"xp": 0, "level": 1})
    xp = data["xp"]
    lvl = data["level"]
    next_xp = get_level_xp(lvl)
    
    embed = discord.Embed(title=f"–£—Ä–æ–≤–µ–Ω—å {member.display_name}", color=0x00ffff)
    embed.add_field(name="–£—Ä–æ–≤–µ–Ω—å", value=lvl, inline=True)
    embed.add_field(name="–û–ø—ã—Ç", value=f"{xp}/{next_xp}", inline=True)
    embed.set_thumbnail(url=member.display_avatar.url)
    await ctx.send(embed=embed)

# === –ú—É–∑—ã–∫–∞ ===
@bot.command(name='play')
async def play(ctx, *, query):
    if not ctx.author.voice:
        return await ctx.send("–ü–æ–¥–∫–ª—é—á–∏—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
    
    if not wavelink.Pool.nodes:
        return await ctx.send("‚ùå –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
    
    player = ctx.voice_client
    if not player:
        player = await ctx.author.voice.channel.connect(cls=wavelink.Player)
    
    tracks = await wavelink.Playable.search(query)
    if not tracks:
        return await ctx.send("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    
    track = tracks[0]
    await player.play(track)
    await ctx.send(f"‚ñ∂Ô∏è –í–∫–ª—é—á–∞—é: **{track.title}**")

@bot.command(name='stop')
async def stop(ctx):
    player = ctx.voice_client
    if player:
        await player.disconnect()
        await ctx.send("‚èπÔ∏è –ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    else:
        await ctx.send("–Ø –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")

# === –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è ===
@bot.command(name='coin')
async def coin(ctx):
    result = random.choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"])
    await ctx.send(f"ü™ô –í—ã–ø–∞–ª–æ: **{result}**")

@bot.command(name='roll')
async def roll(ctx, dice: str = "1d6"):
    try:
        rolls, limit = map(int, dice.split('d'))
        if rolls > 20 or limit > 1000:
            return await ctx.send("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞!")
        results = [random.randint(1, limit) for _ in range(rolls)]
        await ctx.send(f"üé≤ {rolls}d{limit}: {results} (—Å—É–º–º–∞: {sum(results)})")
    except:
        await ctx.send("–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: `!roll 2d6`")

# === –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (–∑–∞–≥–ª—É—à–∫–∏) ===
@bot.command(name='twitch')
async def twitch(ctx, username):
    await ctx.send(f"üì∫ –°–ª–µ–¥–∏–º –∑–∞: https://twitch.tv/{username}")

@bot.command(name='youtube')
async def youtube(ctx, channel):
    await ctx.send(f"üé• –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ YouTube: https://youtube.com/@{channel}")

# === –ü–æ–º–æ—â—å ===
@bot.command(name='help')
async def help_cmd(ctx):
    embed = discord.Embed(title="üìö –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É", color=0x00ff00)
    embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ü–∏—è", value="`!ban`, `!kick`, `!clear`", inline=False)
    embed.add_field(name="–£—Ä–æ–≤–Ω–∏", value="`!rank`", inline=False)
    embed.add_field(name="–ú—É–∑—ã–∫–∞", value="`!play <–∑–∞–ø—Ä–æ—Å>`, `!stop`", inline=False)
    embed.add_field(name="–ò–≥—Ä—ã", value="`!coin`, `!roll`", inline=False)
    embed.add_field(name="–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", value="`!twitch <–Ω–∏–∫>`, `!youtube <–∫–∞–Ω–∞–ª>`", inline=False)
    embed.add_field(name="–ö–∞—Å—Ç–æ–º", value="–ê–¥–º–∏–Ω—ã: `!addcmd <–∏–º—è> <—Ç–µ–∫—Å—Ç>`", inline=False)
    await ctx.send(embed=embed)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    bot.run(TOKEN)